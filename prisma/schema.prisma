generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  body      String
  userId    Int
  s3_Etag   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation("UserPosts", fields: [userId], references: [id])
  repoLink  Repo?
  liked     User[]   @relation("LikedPosts")
  tags      Tags[]   @relation("PostToTags")
}

model Repo {
  id     Int    @id @default(autoincrement())
  postId Int    @unique
  link   String
  files  File?
  post   Post   @relation(fields: [postId], references: [id])
}

model File {
  id        Int      @id @default(autoincrement())
  repoId    Int      @unique
  star      Boolean  @default(false)
  path      String
  contents  String
  createdAt DateTime @default(now())
  repo      Repo     @relation(fields: [repoId], references: [id])
}

model User {
  id             Int             @id @default(autoincrement())
  username       String?         @unique
  googleId       String?         @unique
  linkedinId     String?         @unique
  githubId       String?         @unique
  picture        String?
  firstName      String
  lastName       String?
  follower_count Int?            @default(0)
  post_count     Int?            @default(0)
  devId          String?         @unique
  blogs          Blog[]          @relation("UserBlogs")
  messages       Messages[]
  posts          Post[]          @relation("UserPosts")
  conversations  Conversations[] @relation("ConversationsToUser")
  likedPosts     Post[]          @relation("LikedPosts")
  tags           Tags[]          @relation("TagsToUser")
  User_A         User[]          @relation("UserFollows")
  User_B         User[]          @relation("UserFollows")
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  body      String
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation("UserBlogs", fields: [userId], references: [id])
}

model Tags {
  id       Int     @id @default(autoincrement())
  tagType  tagType
  name     String
  category String?
  posts    Post[]  @relation("PostToTags")
  user     User[]  @relation("TagsToUser")
}

model Messages {
  id             Int           @id @default(autoincrement())
  body           String
  senderId       Int
  conversationId Int
  conversation   Conversations @relation(fields: [conversationId], references: [id])
  sender         User          @relation(fields: [senderId], references: [id])
}

model Conversations {
  id           Int        @id @default(autoincrement())
  messages     Messages[]
  participants User[]     @relation("ConversationsToUser")
}

enum tagType {
  post
  user
}
